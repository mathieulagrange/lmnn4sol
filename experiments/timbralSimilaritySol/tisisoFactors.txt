features === {'mel', 'mfcc','scat', 'null'} % type of features used (null is used for checking file access)
sct === [25, 128, 250, 500, 1000] % window size in ms
projection =2:== {'none', 'lmnn', 'lda'} % type of projection
split =2:== {'none', '50', '25', '10', 'octave'} % databse split, nukbers are random samples, octave concider only the octave 4
test =2:=4/[2 3 4]= [0, 1] % in test mode, the data is different for step 2 (projection) and step 3 (test), the larger split goes to step 2
reference =2:== {'family', 'instrument', 'mode', 'modeFamily', 'judgments', 'averageJudgment'} % reference to compute the metric: family is the instruments grouped if the body is modified (for example by using a sordina), instruments are musical instruments different if the body is modified, 
randomize =2:== [0, 1] % randomize features to check effect of dimensionality in learning
expand =2:=1/2= [0, 494, 756, 876, 1032] % expand features using monomials to check effect of dimensionality in learning
cut =2:=1/2= [0, 1] % keep only the 13 first coeffs for mfccs
median =2:=1/3= [0, 1] % use median renormalization for scattering features
compress =2:=1/3= [0, 1] % use log compression for scattering features
standardize =2:== [0, 1] % standardize features at the end
neighbors =2:== 5 % number of neighbors used for  lmnn learning and performance computation
judgments =3=6/5= {'combined', 'separate'} % 'combined': average the projection matrices and perform evaluation. 'separate': evaluate each projection and average performance
averageJudgment =2:=6/6= {'medoid', 'ensemble'} % 'medoid': align clusterings according to a reference (best average accuracy) and perform majority voting. 'ensemble': use cluster ensemble techniques http://strehl.com/soft.html